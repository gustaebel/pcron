#!/usr/bin/python3
# -----------------------------------------------------------------------
#
# pcron - a periodic cron-like job scheduler.
# Copyright (C) 2009-2015 Lars Gust√§bel <lars@gustaebel.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# -----------------------------------------------------------------------

import sys
import os
import argparse

from libpcron import __version__, __copyright__, PID_NAME
from libpcron.shared import DaemonContext
from libpcron.time import TimeProvider
from libpcron.scheduler import Scheduler


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--version", action="version",
                        version="%%(prog)s %s - %s" % (__version__, __copyright__))
    parser.add_argument("-f", "--foreground", action="store_false", dest="daemon", default=True,
                        help="do not fork to the background and write log messages to stderr")
    parser.add_argument("-d", "--directory", metavar="NAME", default="~/.pcron",
                        help="the name of the configuration directory, default is %(default)s")
    args = parser.parse_args()

    args.directory = os.path.abspath(os.path.expanduser(args.directory))

    with DaemonContext(os.path.join(args.directory, PID_NAME), daemonize=args.daemon):
        with Scheduler(TimeProvider(),
                       args.directory,
                       logfile=sys.stderr if not args.daemon else None) as scheduler:
            scheduler.mainloop()

if __name__ == "__main__":
    main()
